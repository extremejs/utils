name: Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  NODE_VERSION: 20
  PNPM_VERSION: 9

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use PNPM ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm i

      - name: Check commit messages
        if: ${{ github.event_name == 'pull_request' && !startsWith(github.ref_name, 'dependabot/') }}
        run: pnpm commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Check code styles
        run: pnpm lint

      - name: Generate code documents
        run: pnpm document

      - name: Build the project
        run: pnpm build

  test:
    name: Test

    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        node-version:
          - 18
          - 20
          - 22

    runs-on: ${{ matrix.os }}

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Use PNPM ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm i

      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: Test the project
        run: pnpm test -- --ci --verbose --no-cache --maxWorkers ${{ steps.cpu-cores.outputs.count }}

  coverage:
    name: Report Code Coverage

    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Use PNPM ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm i

      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: Collect code coverage
        run: pnpm test:coverage --ci --no-cache --maxWorkers ${{ steps.cpu-cores.outputs.count }}

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v4
        with:
          env_vars: NODE_VERSION,REF
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          NODE_VERSION: ${{ env.NODE_VERSION }}
          REF: ${{ github.ref_name }}

  test-summary:
    name: Test Summary

    needs:
      - build
      - test
      - coverage

    if: ${{ always() && github.event_name == 'pull_request' }}

    runs-on: ubuntu-latest

    steps:
      - name: Check build/test matrix status
        if: ${{ needs.build.result != 'success' || needs.test.result != 'success' || needs.coverage.result != 'success' }}
        run: exit 1
